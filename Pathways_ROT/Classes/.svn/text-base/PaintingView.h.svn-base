
#import <UIKit/UIKit.h>
#import <OpenGLES/EAGL.h>
#import <OpenGLES/ES1/gl.h>
#import <OpenGLES/ES1/glext.h>

#import "Three20.h"

#define kBrushOpacity		(1.0 / 3.0)
#define kBrushPixelStep		3
#define kBrushScale			2
#define kLuminosity			0.75
#define kSaturation			1.0

@class Brush;

@interface PaintingView : UIView
{
	BOOL isEraseMode;
	Brush *brush;
	id paintDelegate;
@private
	// The pixel dimensions of the backbuffer
	GLint backingWidth;
	GLint backingHeight;
	
	EAGLContext *context;
	
	// OpenGL names for the renderbuffer and framebuffers used to render to this view
	GLuint viewRenderbuffer, viewFramebuffer;
	
	// OpenGL name for the depth buffer that is attached to viewFramebuffer, if it exists (0 if it does not exist)
	GLuint depthRenderbuffer;
	
	GLuint						bgTexture;

	GLuint	brushTexture;
	CGPoint	location;
	CGPoint	previousLocation;
	Boolean	firstTouch;
	Boolean needsErase;
	
	CALayer *undoLayer;
//	ESContext esContext;
	
//	NSData *PrevData;

//	NSMutableArray *singleLinePoints;	
//	NSMutableArray *allLinesDrawPoints;	

}
@property (assign) IBOutlet id paintDelegate;;
@property(nonatomic, readwrite) CGPoint location;
@property(nonatomic, readwrite) CGPoint previousLocation;

- (void)erase;
-(IBAction)setBrush:(Brush*)aBrush;
-(IBAction)eraserButtonAction:(id)sender;
-(IBAction)trash:(id)sender;
-(UIImage*)snapUIImage;
-(void)setImage:(UIImage*)aImage;
@end
