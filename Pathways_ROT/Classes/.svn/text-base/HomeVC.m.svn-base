//
//  HomeVC.m
//  Pathways
//
//  Created by iMac on 23/02/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "HomeVC.h"
#import "LandingView.h"
#import "TTDefaultStyleSheet.h"
#import "TTURLCache.h"
#import "LandingView.h"
#import "GalleriesVC.h"
#import "EventsVC.h"
#import "DrawVC.h"
#import "MoreVC.h"

#import "DrawBackVC.h"
#import "OutLineVC.h"
#import "RegisterVC.h"
#import "OnBoardVC.h"
@interface HomeVC (Private)
- (void)dismissChildAnimated:(BOOL)animated;
@end


@implementation HomeVC

@synthesize launcherNavigationController = _launcherNavigationController;
@synthesize launcherView = _launcherView;
@synthesize launcherNavigationControllerTopViewController = _launcherNavigationControllerTopViewController;

-(IBAction)buttonAction:(UIButton*)sender{
	TTNavigator* navigator = [TTNavigator navigator];

	//if (![navigator restoreViewControllers]) 
	{
		NSString *title= [NSString stringWithFormat:@"pw://%@",sender.titleLabel.text];
		NSLog(@"title %@",title);
		[navigator openURL:title animated:YES];
	}
	
}
- (void)didReceiveMemoryWarning {
	// Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
	
	// Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
	// Release any retained subviews of the main view.
	// e.g. self.myOutlet = nil;
}

- (void)dealloc {
	TT_RELEASE_SAFELY(_overlayView);
	TT_RELEASE_SAFELY(_launcherView);
	TT_RELEASE_SAFELY(_launcherNavigationController);
    [super dealloc];
}

- (id)init {
	if (self = [super initWithNibName:@"HomeVC" bundle:nil]) {
		_launcherNavigationController = nil;
		_overlayView = nil;
		_launcherNavigationControllerTopViewController = nil;
	}
	return self;
}
- (void)viewDidLoad {
	[super loadView];
//	_launcherView = [[LandingView alloc] initWithFrame:self.view.bounds];
	//self.navigationController.navigationBar.tintColor =  TTSTYLEVAR(navigationBarTintColor);
	self.view = _launcherView;
	self.view.backgroundColor = TTSTYLEVAR(screenBackgroundColor);
	self.navigationController.navigationBar.tintColor = TTSTYLEVAR(navigationBarTintColor);
	self.title = @"Home";
	
	UIImage *logoImage = [UIImage imageNamed:@"smallogo.png"];
	UIImageView *logoView = [[UIImageView alloc] initWithImage:logoImage];
	logoView.frame = CGRectMake(0, 0, logoImage.size.width, 44);
	
	UIBarButtonItem* camera = [[UIBarButtonItem alloc] initWithCustomView:logoView];
	[self.navigationItem setRightBarButtonItem:camera animated:YES];
	[camera release];
	[logoView release];
	
	TTNavigator* navigator = [TTNavigator navigator];
	navigator.supportsShakeToReload = YES;
	navigator.persistenceMode = TTNavigatorPersistenceModeNone;
	
	TTURLMap* map = navigator.URLMap;
	[map from:@"*" toViewController:[UIViewController class]];
	[map from:@"pw://galleries" toSharedViewController:[GalleriesVC class]];
	[map from:@"pw://events" toSharedViewController:[[EventsVC alloc] initWithNibName:@"EventsVC" bundle:nil]];
	[map from:@"pw://draw" toSharedViewController:[[DrawVC alloc] initWithNibName:@"DrawVC" bundle:nil]];
	[map from:@"pw://more" toSharedViewController:[[MoreVC alloc] initWithNibName:@"MoreVC" bundle:nil]];
	
	[map from:@"pw://drawback" toSharedViewController:[[DrawBackVC alloc] initWithNibName:@"DrawBackVC" bundle:nil]];
	[map from:@"pw://outline" toSharedViewController:[[OutLineVC alloc] initWithNibName:@"OutLineVC" bundle:nil]];
	[map from:@"pw://register" toSharedViewController:[[RegisterVC alloc] initWithNibName:@"RegisterVC" bundle:nil]];
	[map from:@"pw://onboard" toSharedViewController:[[OnBoardVC alloc] initWithNibName:@"OnBoardVC" bundle:nil]];	

}
#pragma mark -
#pragma mark UITableViewController

- (void)viewWillAppear:(BOOL)animated {
	[super viewWillAppear:animated];
	[_launcherNavigationController viewWillAppear:animated];
}

- (void)viewDidAppear:(BOOL)animated {
	[super viewDidAppear:animated];
	[_launcherNavigationController viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated {
	[super viewWillDisappear:animated];
	[_launcherNavigationController viewWillDisappear:animated];
}

- (void)viewDidDisappear:(BOOL)animated {
	[super viewDidDisappear:animated];
	[_launcherNavigationController viewDidDisappear:animated];
}

- (CGAffineTransform)transformForOrientation {
	return TTRotateTransformForOrientation(TTInterfaceOrientation());
}

#pragma mark -
#pragma mark Overlay view

- (CGRect)rectForOverlayView {
	return [_launcherView frameWithKeyboardSubtracted:0];
}

- (void)addOverlayView {
	if (!_overlayView) {
		CGRect frame = [self rectForOverlayView];
		_overlayView = [[UIView alloc] initWithFrame:frame];
		_overlayView.backgroundColor = [UIColor blackColor];
		_overlayView.alpha = 0.0f;
		_overlayView.autoresizesSubviews = YES;
		_overlayView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleBottomMargin;
		[_launcherView addSubview:_overlayView];
	}
	self.view.frame = _overlayView.bounds;
	self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
}

- (void)resetOverlayView {
	if (_overlayView && !_overlayView.subviews.count) {
		[_overlayView removeFromSuperview];
		TT_RELEASE_SAFELY(_overlayView);
	}
}

- (void)layoutOverlayView {
	if (_overlayView) {
		_overlayView.frame = [self rectForOverlayView];
	}
}

#pragma mark -
#pragma mark Animation delegates

- (void)showAnimationDidStop {
}

- (void)fadeAnimationDidStop {
	[self dismissChildAnimated:NO];
	TT_RELEASE_SAFELY(_overlayView);
}

- (void)fadeOut {
	UIView *viewToDismiss = [[_launcherNavigationController topViewController] view];
	
	viewToDismiss.transform = CGAffineTransformIdentity;
	
	[UIView beginAnimations:nil context:nil];
	[UIView setAnimationDuration:TT_LAUNCHER_HIDE_TRANSITION_DURATION];
	[UIView setAnimationCurve:UIViewAnimationCurveEaseIn];
	[UIView setAnimationDelegate:self];
	[UIView setAnimationDidStopSelector:@selector(fadeAnimationDidStop)];
	viewToDismiss.alpha = 0;		
	viewToDismiss.transform = CGAffineTransformMakeScale(0.00001, 0.00001);
	_overlayView.alpha = 0.0f;
	[self resetOverlayView];
	[UIView commitAnimations];	
}


- (void)launchChild {
	
	UIView *viewToLaunch = [[_launcherNavigationController topViewController] view];
	viewToLaunch.transform = [self transformForOrientation];
	
	[self.superController.view addSubview:[_launcherNavigationController view]];
	_launcherNavigationController.superController = self;
	
	viewToLaunch.frame = self.view.bounds;
	viewToLaunch.alpha = 0;		
	viewToLaunch.transform = CGAffineTransformMakeScale(0.00001, 0.00001);
	
	// Add overlay view
	[self addOverlayView];
	
	[UIView beginAnimations:nil context:nil];
	[UIView setAnimationDuration:TT_LAUNCHER_SHOW_TRANSITION_DURATION];
	[UIView setAnimationCurve:UIViewAnimationCurveLinear];
	[UIView setAnimationDelegate:self];
	[UIView setAnimationDidStopSelector:@selector(showAnimationDidStop)];
	viewToLaunch.alpha = 1.0f;		
	viewToLaunch.transform = CGAffineTransformIdentity;
	_overlayView.alpha = 0.85f;
	[UIView commitAnimations];
}

- (void)addSubcontroller:(UIViewController*)controller animated:(BOOL)animated transition:(UIViewAnimationTransition)transition {
	if (!_launcherNavigationController) {
		_launcherNavigationController = [[UINavigationController alloc] initWithRootViewController:controller];
		//_launcherNavigationController.navigationBar.barStyle = UIBarStyleBlackTranslucent;
		_launcherNavigationController.superController = self;
		_launcherNavigationController.delegate = self;
		//_launcherNavigationController.navigationBar.tintColor = TTSTYLEVAR(navigationBarTintColor);
		
		// Add default left-side button in navigation bar
		UIBarButtonItem *launcherBarButtonItem = [[UIBarButtonItem alloc] initWithImage:TTIMAGE(@"bundle://Three20.bundle/images/launcher.png") style:UIBarButtonItemStyleBordered target:self action:@selector(dismissChild)];
		[controller.navigationItem setLeftBarButtonItem:launcherBarButtonItem];
		[launcherBarButtonItem release];
		
		// Launch child
		[self launchChild];
		
	} else {
		[_launcherNavigationController addSubcontroller:controller animated:animated transition:transition];
		self.launcherNavigationControllerTopViewController = controller;
	}
}

- (void)dismissChild {
	[self dismissChildAnimated:YES];
}

- (void)dismissChildAnimated:(BOOL)animated {
	if (animated) {
		[self fadeOut];
	} else {
		[[_launcherNavigationController topViewController] viewWillDisappear:animated];
		UIView *viewToDismiss = [_launcherNavigationController view];
		[viewToDismiss removeFromSuperview];
		[[_launcherNavigationController topViewController] viewDidDisappear:animated];
		TT_RELEASE_SAFELY(_launcherNavigationController);
		[self.superController viewWillAppear:animated];
		[self.superController viewDidAppear:animated];
	}
	[[_launcherNavigationController topViewController] viewDidDisappear:animated];
}

#pragma mark -
#pragma mark UIViewController (TTCategory)

- (void)persistNavigationPath:(NSMutableArray*)path {
	if (_launcherNavigationController) {
		// We have controllers open inside the launcher controller, so persist it
		[_launcherNavigationController persistNavigationPath:path];
	}
}


#pragma mark -
#pragma mark UINavigationControllerDelegate


- (void)navigationController:(UINavigationController *)navigationController 
	  willShowViewController:(UIViewController *)viewController 
					animated:(BOOL)animated {
	[_launcherNavigationControllerTopViewController viewWillDisappear:animated];
	[viewController viewWillAppear:animated];
}

- (void)navigationController:(UINavigationController *)navigationController 
	   didShowViewController:(UIViewController *)viewController 
					animated:(BOOL)animated {
	[_launcherNavigationControllerTopViewController viewDidDisappear:animated];
	[viewController viewDidAppear:animated];
	
	self.launcherNavigationControllerTopViewController = viewController;
}

@end
